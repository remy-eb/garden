# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: circleci/node:10
        environment:
          GOPATH: /home/circleci/go

    working_directory: ~/go/src/github.com/garden-io/garden

    steps:
      - checkout

      - setup_remote_docker:
          docker_layer_caching: true

      - run: export

      - run:
          name: Install apt dependencies
          command: |
            sudo apt-get update
            sudo apt -y install software-properties-common
            # Need software-properties-common for the add-apt-repository command
            sudo add-apt-repository -y ppa:gophers/archive
            sudo apt -y install rsync cmake libicu-dev pkg-config golang-1.11-go

      - run:
          name: Install kubectl
          command: |
            curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v1.10.0/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/

      - run:
          name: Install dep
          command: |
            mkdir -p $GOPATH/bin
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v0-npm-deps-{{ checksum "package-lock.json" }}
      - restore_cache:
          keys:
          - v0-garden-service-deps-{{ checksum "garden-service/package-lock.json" }}
      - restore_cache:
          keys:
          - v0-go-deps-{{ checksum "Gopkg.lock" }}

      # install dependencies
      - run: npm ci
      - run: node_modules/.bin/lerna bootstrap --ci
      - run: $GOPATH/bin/dep ensure

      - save_cache:
          paths: [node_modules]
          key: v0-npm-deps-{{ checksum "package-lock.json" }}
      - save_cache:
          paths: [garden-service/node_modules]
          key: v0-garden-service-deps-{{ checksum "garden-service/package-lock.json" }}
      - save_cache:
          paths: [vendor]
          key: v0-go-deps-{{ checksum "Gopkg.lock" }}

      # a couple of special cases needed just for local builds
      - run: |
          if [[ $CIRCLE_SHELL_ENV == *"localbuild"* ]]; then
            sudo chown $(whoami): /var/run/docker.sock
            npm rebuild
          fi

      - run:
          name: Make sure generated docs are up-to-date
          command: |
            npm run generate-docs
            npm run check-docs

      # build, lint and run tests
      - run: npm run build
      - run: npm run lint
      - run: npm test

#  minikube-tests:
#    # got this from https://github.com/gavinzhou/ci-minikube/blob/master/.circleci/config.yml
#    machine: true
#    environment:
#      CHANGE_MINIKUBE_NONE_USER: true
#      BASH_ENV: ~/.bashrc
#    steps:
#      - checkout
#      - run:
#          command: |
#            curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v1.10.0/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
#      - run:
#          command: |
#            ## only run 0.25.0 , not work after 0.25.0+
#            ## because circleci machine run ubuntu 14
#            curl -Lo minikube https://storage.googleapis.com/minikube/releases/v0.25.0/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/
#      - run: sudo minikube start --vm-driver=none
#      - run: sudo minikube update-context
#      - run:
#          name: Install node@8
#          # https://discuss.circleci.com/t/how-to-change-node-version-in-circleci-2-0/17455
#          command: |
#            set +e
#            touch $BASH_ENV
#            curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.5/install.sh | bash
#            echo 'export NVM_DIR="$HOME/.nvm"' >> $BASH_ENV
#            echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
#            echo 'nvm install 8' >> $BASH_ENV
#            echo 'nvm alias default 8' >> $BASH_ENV
#      - run:
#          # for some reason we need to manually source $BASH_ENV (CircleCI machine executer is poorly documented...)
#          command: |
#            source $BASH_ENV
#            npm install
#            npm run build
#      - run:
#          command: |
#            JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'; until sudo kubectl get nodes -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do sleep 1; done
#      - run: sudo kubectl cluster-info
#      - run:
#          command: |
#            source $BASH_ENV
#            ./bin/integ
#
#workflows:
#  version: 2
#  all-tests:
#    jobs:
#      - unit-tests
#      - minikube-tests
